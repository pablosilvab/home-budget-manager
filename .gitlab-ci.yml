variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
  GIT_DEPTH: "0" 

stages:
  - install
  - test
  - coverage
  - sonarcloud-check
  - deploy

image: node:16

install:
  stage: install
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
    expire_in: 1h
  only:
    - main

test:
  stage: test
  dependencies:
    - install
  script:
    - npx jest --coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 1h
  only:
    - main

coverage:
  stage: coverage
  script:
    - npm run test:cov
  artifacts:
    paths:
      - coverage/
  only:
    - main

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  script:
    - apk update && apk add --no-cache curl jq
    - curl --version
    - jq --version
    - echo "Iniciando despliegue en Render..."
    - |
      # Solicitar el despliegue
      DEPLOY_RESPONSE=$(curl -v "${RENDER_DEPLOY_URL}")
      echo "Respuesta del webhook de despliegue: $DEPLOY_RESPONSE"
      
      # Extraer el ID del despliegue desde la respuesta
      DEPLOY_ID=$(echo $DEPLOY_RESPONSE | jq -r '.deploy.id')
      echo "ID del despliegue: $DEPLOY_ID"
      
      if [ "$DEPLOY_ID" == "null" ] || [ -z "$DEPLOY_ID" ]; then
        echo "Error: No se pudo obtener el ID del despliegue."
        exit 1
      fi

      # Consultar el estado del despliegue
      echo "Esperando a que finalice el despliegue..."
      while true; do
        DEPLOY_STATUS=$(curl -s "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys/$DEPLOY_ID" | jq -r '.status')
        echo "Estado del despliegue: $DEPLOY_STATUS"
        
        if [ "$DEPLOY_STATUS" == "live" ]; then
          echo "El despliegue fue exitoso."
          break
        elif [ "$DEPLOY_STATUS" == "failed" ]; then
          echo "El despliegue fall√≥."
          exit 1
        else
          echo "Esperando 10 segundos antes de volver a verificar..."
          sleep 10
        fi
      done
  only:
    - main
  when: on_success
